name: build

on:
  create:
  push:
    branches:
      - develop
      - 'v*'
    paths-ignore:
      - 'docs/**'
      - 'changelogs/**'
      - 'deploy/helm/**'
      - '*.md'
      - 'LICENSE'
      - 'MAINTAINERS'

env:
  IMAGE_ORG: nobidev

jobs:
  ndm-daemonset:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set CI Tag
        run: |
          BRANCH="${GITHUB_REF##*/}"
          CI_TAG=${BRANCH#v}-ci
          if [ ${BRANCH} = "develop" ]; then
            CI_TAG="ci"
          fi
          echo "TAG=${CI_TAG}" >> $GITHUB_ENV

      - name: Set Build Date
        id: date
        run: |
          echo "::set-output name=DATE::$(date -u +'%Y-%m-%dT%H:%M:%S%Z')"

      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          # add each registry to which the image needs to be pushed here
          images: |
            ${{ env.IMAGE_ORG }}/openebs-node-disk-manager
            ghcr.io/${{ env.IMAGE_ORG }}/node-disk-manager/node-disk-manager
          tag-latest: false
          tag-custom-only: true
          tag-custom: |
            ${{ env.TAG }}

      - name: Print Tags
        run: |
          echo "${{ steps.docker_meta.outputs.tags }}"

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: v0.5.1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GHCR
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push Image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./build/ndm-daemonset/Dockerfile
          push: true
          platforms: linux/amd64
          tags: |
            ${{ steps.docker_meta.outputs.tags }}
          build-args: |
            DBUILD_DATE=${{ steps.date.outputs.DATE }}
            DBUILD_REPO_URL=https://github.com/nobidev/node-disk-manager

  ndm-exporter:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set CI Tag
        run: |
          BRANCH="${GITHUB_REF##*/}"
          CI_TAG=${BRANCH#v}-ci
          if [ ${BRANCH} = "develop" ]; then
            CI_TAG="ci"
          fi
          echo "TAG=${CI_TAG}" >> $GITHUB_ENV

      - name: Set Build Date
        id: date
        run: |
          echo "::set-output name=DATE::$(date -u +'%Y-%m-%dT%H:%M:%S%Z')"

      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          # add each registry to which the image needs to be pushed here
          images: |
            ${{ env.IMAGE_ORG }}/openebs-node-disk-exporter
            ghcr.io/${{ env.IMAGE_ORG }}/node-disk-manager/node-disk-exporter
          tag-latest: false
          tag-custom-only: true
          tag-custom: |
            ${{ env.TAG }}

      - name: Print Tags
        run: |
          echo "${{ steps.docker_meta.outputs.tags }}"

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: v0.5.1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GHCR
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push Image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./build/ndm-exporter/Dockerfile
          push: true
          platforms: linux/amd64
          tags: |
            ${{ steps.docker_meta.outputs.tags }}
          build-args: |
            DBUILD_DATE=${{ steps.date.outputs.DATE }}
            DBUILD_REPO_URL=https://github.com/nobidev/node-disk-manager

  ndm-operator:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set CI Tag
        run: |
          BRANCH="${GITHUB_REF##*/}"
          CI_TAG=${BRANCH#v}-ci
          if [ ${BRANCH} = "develop" ]; then
            CI_TAG="ci"
          fi
          echo "TAG=${CI_TAG}" >> $GITHUB_ENV

      - name: Set Build Date
        id: date
        run: |
          echo "::set-output name=DATE::$(date -u +'%Y-%m-%dT%H:%M:%S%Z')"

      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          # add each registry to which the image needs to be pushed here
          images: |
            ${{ env.IMAGE_ORG }}/openebs-node-disk-operator
            ghcr.io/${{ env.IMAGE_ORG }}/node-disk-manager/node-disk-operator
          tag-latest: false
          tag-custom-only: true
          tag-custom: |
            ${{ env.TAG }}

      - name: Print Tags
        run: |
          echo "${{ steps.docker_meta.outputs.tags }}"

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: v0.5.1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GHCR
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push Image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./build/ndm-operator/Dockerfile
          push: true
          platforms: linux/amd64
          tags: |
            ${{ steps.docker_meta.outputs.tags }}
          build-args: |
            DBUILD_DATE=${{ steps.date.outputs.DATE }}
            DBUILD_REPO_URL=https://github.com/nobidev/node-disk-manager
